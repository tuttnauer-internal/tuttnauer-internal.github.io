{"version":3,"sources":["GraphService.ts","Config.ts","AuthProvider.tsx","NavBar.tsx","ErrorMessage.tsx","Welcome.tsx","Calendar.tsx","SToBClassCodeGenerator.tsx","settings/ParameterView.tsx","settings/AddStageModal.tsx","settings/AddParameterModal.tsx","settings/StageView.tsx","settings/CycleView.tsx","settings/AddCycleModal.tsx","Settings.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["graph","require","getAuthenticatedClient","accessToken","Client","init","authProvider","done","getUserDetails","a","client","api","get","user","getEvents","select","orderby","events","config","appId","redirectUri","scopes","serverUrl","withAuthProvider","WrappedComponent","props","userAgentApplication","state","error","isAuthenticated","UserAgentApplication","auth","clientId","cache","cacheLocation","storeAuthStateInCookie","this","getAccount","getUserProfile","login","logout","getAccessToken","setError","message","debug","setErrorMessage","loginPopup","prompt","setState","normalizeError","acquireTokenSilent","silentResult","isInteractionRequired","acquireTokenPopup","interactiveResult","displayName","email","mail","userPrincipalName","normalizedError","errParts","split","length","JSON","stringify","indexOf","React","Component","UserAvatar","avatar","src","alt","className","style","width","AuthNavItem","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","divider","onClick","authButtonMethod","NavItem","Button","color","NavBar","toggle","bind","isOpen","path","title","authenticationRequired","calendarLink","to","exact","Navbar","dark","expand","fixed","Container","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","menueElement","NavLink","target","ErrorMessage","Alert","WelcomeContent","Welcome","Jumbotron","formatDateTime","dateTime","undefined","moment","utc","local","format","value","Table","scope","map","event","key","id","organizer","emailAddress","name","subject","start","end","generatedClassCode","codeGeneratorFactor","loading","fetch","credentials","headers","response","json","generatedClassCodeResponse","type","onInput","e","currentTarget","fetchGeneratedClassCode","ParameterView","Card","CardBody","CardTitle","CardSubtitle","CardText","AddStageModal","useState","modal","setModal","Modal","ModalHeader","ModalBody","ModalFooter","addStage","AddParameterModal","addParameter","StageView","stateMachineStage","newStage","parameters","stages","stage","updateStage","index","updatedStage","parameter","defaultValue","maxValue","minValue","CycleView","cycle","updateCycle","cycleId","AddCycleModal","addCycle","cycles","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.f408ab0c.chunk.js","sourcesContent":["var graph = require('@microsoft/microsoft-graph-client');\r\n\r\nfunction getAuthenticatedClient(accessToken: string) {\r\n  // Initialize Graph client\r\n  const client = graph.Client.init({\r\n    // Use the provided access token to authenticate\r\n    // requests\r\n    authProvider: (done: any) => {\r\n      done(null, accessToken);\r\n    }\r\n  });\r\n\r\n  return client;\r\n}\r\n\r\nexport async function getUserDetails(accessToken: string) {\r\n  const client = getAuthenticatedClient(accessToken);\r\n\r\n  const user = await client.api('/me').get();\r\n  return user;\r\n}\r\n\r\n\r\nexport async function getEvents(accessToken: string) {\r\n  const client = getAuthenticatedClient(accessToken);\r\n\r\n  const events = await client\r\n    .api('/me/events')\r\n    .select('subject,organizer,start,end')\r\n    .orderby('createdDateTime DESC')\r\n    .get();\r\n\r\n  return events;\r\n}","export const config = {\r\n    appId: 'f68e62e9-f631-4411-8bf7-4630e16d06d5',\r\n    redirectUri: 'http://localhost:3000',\r\n    scopes: [\r\n      'user.read',\r\n      'calendars.read'\r\n    ],\r\n    serverUrl: 'http://localhost:8080'\r\n  };","import { getUserDetails } from './GraphService';\r\nimport React from 'react';\r\nimport { UserAgentApplication } from 'msal';\r\n\r\nimport { config } from './Config';\r\n\r\nexport interface AuthComponentProps {\r\n  error: any;\r\n  isAuthenticated: boolean;\r\n  user: any;\r\n  login: Function;\r\n  logout: Function;\r\n  getAccessToken: Function;\r\n  setError: Function;\r\n}\r\n\r\ninterface AuthProviderState {\r\n  error: any;\r\n  isAuthenticated: boolean;\r\n  user: any;\r\n}\r\n\r\nexport default function withAuthProvider<T extends React.Component<AuthComponentProps>>\r\n  (WrappedComponent: new(props: AuthComponentProps, context?: any) => T): React.ComponentClass {\r\n  return class extends React.Component<any, AuthProviderState> {\r\n    private userAgentApplication: UserAgentApplication;\r\n\r\n    constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isAuthenticated: false,\r\n        user: {}\r\n      };\r\n\r\n      // Initialize the MSAL application object\r\n      this.userAgentApplication = new UserAgentApplication({\r\n        auth: {\r\n            clientId: config.appId,\r\n            redirectUri: config.redirectUri\r\n        },\r\n        cache: {\r\n            cacheLocation: \"sessionStorage\",\r\n            storeAuthStateInCookie: true\r\n        }\r\n      });\r\n    }\r\n\r\n    componentDidMount() {\r\n      // If MSAL already has an account, the user\r\n      // is already logged in\r\n      var account = this.userAgentApplication.getAccount();\r\n\r\n      if (account) {\r\n        // Enhance user object with data from Graph\r\n        this.getUserProfile();\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent\r\n        { ...this.state.error }\r\n        { ...this.state.isAuthenticated }\r\n        { ...this.state.user }\r\n        login = { () => this.login() }\r\n        logout = { () => this.logout() }\r\n        getAccessToken = { (scopes: string[]) => this.getAccessToken(scopes)}\r\n        setError = { (message: string, debug: string) => this.setErrorMessage(message, debug)}\r\n        {...this.props} {...this.state} />;\r\n    }\r\n\r\n    async login() {\r\n      try {\r\n        // Login via popup\r\n        await this.userAgentApplication.loginPopup(\r\n            {\r\n              scopes: config.scopes,\r\n              prompt: \"select_account\"\r\n          });\r\n        // After login, get the user's profile\r\n        await this.getUserProfile();\r\n      }\r\n      catch(err) {\r\n        this.setState({\r\n          isAuthenticated: false,\r\n          user: {},\r\n          error: this.normalizeError(err)\r\n        });\r\n      }\r\n    }\r\n\r\n    logout() {\r\n      this.userAgentApplication.logout();\r\n    }\r\n\r\n    async getAccessToken(scopes: string[]): Promise<string> {\r\n      try {\r\n        // Get the access token silently\r\n        // If the cache contains a non-expired token, this function\r\n        // will just return the cached token. Otherwise, it will\r\n        // make a request to the Azure OAuth endpoint to get a token\r\n        var silentResult = await this.userAgentApplication.acquireTokenSilent({\r\n          scopes: scopes\r\n        });\r\n\r\n        return silentResult.accessToken;\r\n      } catch (err) {\r\n        // If a silent request fails, it may be because the user needs\r\n        // to login or grant consent to one or more of the requested scopes\r\n        if (this.isInteractionRequired(err)) {\r\n          var interactiveResult = await this.userAgentApplication.acquireTokenPopup({\r\n            scopes: scopes\r\n          });\r\n\r\n          return interactiveResult.accessToken;\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n\r\n    async getUserProfile() {\r\n      try {\r\n        var accessToken = await this.getAccessToken(config.scopes);\r\n\r\n        if (accessToken) {\r\n          // Get the user's profile from Graph\r\n            var user = await getUserDetails(accessToken);\r\n            this.setState({\r\n                isAuthenticated: true,\r\n                user: {\r\n                displayName: user.displayName,\r\n                email: user.mail || user.userPrincipalName\r\n                },\r\n                error: null\r\n            });\r\n        }\r\n      }\r\n      catch(err) {\r\n        this.setState({\r\n          isAuthenticated: false,\r\n          user: {},\r\n          error: this.normalizeError(err)\r\n        });\r\n      }\r\n    }\r\n\r\n    setErrorMessage(message: string, debug: string) {\r\n      this.setState({\r\n        error: {message: message, debug: debug}\r\n      });\r\n    }\r\n\r\n    normalizeError(error: string | Error): any {\r\n      var normalizedError = {};\r\n      if (typeof(error) === 'string') {\r\n        var errParts = error.split('|');\r\n        normalizedError = errParts.length > 1 ?\r\n          { message: errParts[1], debug: errParts[0] } :\r\n          { message: error };\r\n      } else {\r\n        normalizedError = {\r\n          message: error.message,\r\n          debug: JSON.stringify(error)\r\n        };\r\n      }\r\n      return normalizedError;\r\n    }\r\n\r\n    isInteractionRequired(error: Error): boolean {\r\n      if (!error.message || error.message.length <= 0) {\r\n        return false;\r\n      }\r\n\r\n      return (\r\n        error.message.indexOf('consent_required') > -1 ||\r\n        error.message.indexOf('interaction_required') > -1 ||\r\n        error.message.indexOf('login_required') > -1\r\n      );\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport { NavLink as RouterNavLink } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  Container,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\ninterface NavBarProps {\r\n  isAuthenticated : boolean;\r\n  authButtonMethod : any;\r\n  user : any;\r\n}\r\n\r\ninterface NavBarState {\r\n  isOpen : boolean;\r\n}\r\n\r\nfunction UserAvatar(props: any) {\r\n  // If a user avatar is available, return an img tag with the pic\r\n  if (props.user.avatar) {\r\n    return <img\r\n            src={props.user.avatar} alt=\"user\"\r\n            className=\"rounded-circle align-self-center mr-2\"\r\n            style={{width: '32px'}}></img>;\r\n  }\r\n\r\n  // No avatar available, return a default icon\r\n  return <i\r\n          className=\"far fa-user-circle fa-lg rounded-circle align-self-center mr-2\"\r\n          style={{width: '32px'}}></i>;\r\n}\r\n\r\nfunction AuthNavItem(props: NavBarProps) {\r\n  // If authenticated, return a dropdown with the user's info and a\r\n  // sign out button\r\n  if (props.isAuthenticated) {\r\n    return (\r\n      <UncontrolledDropdown>\r\n        <DropdownToggle nav caret>\r\n          <UserAvatar user={props.user}/>\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          <h5 className=\"dropdown-item-text mb-0\">{props.user.displayName}</h5>\r\n          <p className=\"dropdown-item-text text-muted mb-0\">{props.user.email}</p>\r\n          <DropdownItem divider />\r\n          <DropdownItem onClick={props.authButtonMethod}>Sign Out</DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n  }\r\n\r\n  // Not authenticated, return a sign in link\r\n  return (\r\n    <NavItem>\r\n      <Button\r\n        onClick={props.authButtonMethod}\r\n        className=\"btn-link nav-link border-0\"\r\n        color=\"link\">Sign In</Button>\r\n    </NavItem>\r\n  );\r\n}\r\n\r\nexport default class NavBar extends React.Component<NavBarProps, NavBarState> {\r\n  constructor(props: NavBarProps) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n\r\n  menueElement(path: string, title: string, authenticationRequired: boolean): JSX.Element | null {\r\n    let calendarLink = null;\r\n    if (this.props.isAuthenticated || !authenticationRequired) {\r\n      calendarLink = (\r\n        <NavItem>\r\n          <RouterNavLink to={path} className=\"nav-link\" exact>{title}</RouterNavLink>\r\n        </NavItem>\r\n      );\r\n    }\r\n    return calendarLink;\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"md\" fixed=\"top\">\r\n          <Container>\r\n            <NavbarBrand href=\"/\">Tuttnauer</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"mr-auto\" navbar>\r\n                <NavItem>\r\n                  <RouterNavLink to=\"/\" className=\"nav-link\" exact>Home</RouterNavLink>\r\n                </NavItem>\r\n                {this.menueElement(\"/calendar\", \"Calendar\", true)}\r\n                {this.menueElement(\"/s-b-code\", \"S to B code\", true)}\r\n                {this.menueElement(\"/settings\", \"settings\", false)}\r\n              </Nav>\r\n              <Nav className=\"justify-content-end\" navbar>\r\n                <NavItem>\r\n                  <NavLink href=\"https://developer.microsoft.com/graph/docs/concepts/overview\" target=\"_blank\">\r\n                    <i className=\"fas fa-external-link-alt mr-1\"></i>\r\n                    Docs\r\n                  </NavLink>\r\n                </NavItem>\r\n                <AuthNavItem\r\n                  isAuthenticated={this.props.isAuthenticated}\r\n                  authButtonMethod={this.props.authButtonMethod}\r\n                  user={this.props.user} />\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\n\r\ninterface ErrorMessageProps {\r\n  debug : string;\r\n  message : string;\r\n}\r\n\r\nexport default class ErrorMessage extends React.Component<ErrorMessageProps> {\r\n  render() {\r\n    let debug = null;\r\n    if (this.props.debug) {\r\n      debug = <pre className=\"alert-pre border bg-light p-2\"><code>{this.props.debug}</code></pre>;\r\n    }\r\n    return (\r\n      <Alert color=\"danger\">\r\n        <p className=\"mb-3\">{this.props.message}</p>\r\n        {debug}\r\n      </Alert>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {\r\n  Button,\r\n  Jumbotron } from 'reactstrap';\r\n\r\ninterface WelcomeProps {\r\n  isAuthenticated : boolean;\r\n  authButtonMethod : any;\r\n  user : any;\r\n}\r\n\r\ninterface WelcomeState {\r\n  isOpen : boolean;\r\n}\r\n\r\nfunction WelcomeContent(props: WelcomeProps) {\r\n  // If authenticated, greet the user\r\n  if (props.isAuthenticated) {\r\n    return (\r\n      <div>\r\n        <h4>Welcome {props.user.displayName}!</h4>\r\n        <p>Use the navigation bar at the top of the page to get started.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <Button color=\"primary\" onClick={props.authButtonMethod}>Sign in</Button>;\r\n}\r\n\r\nexport default class Welcome extends React.Component<WelcomeProps, WelcomeState> {\r\n  render() {\r\n    return (\r\n      <Jumbotron>\r\n        <h1>Tuttnauer</h1>\r\n        <p className=\"lead\">\r\n            Internal tool\r\n        </p>\r\n        <WelcomeContent\r\n          isAuthenticated={this.props.isAuthenticated}\r\n          user={this.props.user}\r\n          authButtonMethod={this.props.authButtonMethod} />\r\n      </Jumbotron>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport moment from 'moment';\r\nimport { Event } from 'microsoft-graph';\r\nimport { config } from './Config';\r\nimport { getEvents } from './GraphService';\r\nimport withAuthProvider, { AuthComponentProps } from './AuthProvider';\r\n\r\ninterface CalendarState {\r\n  events: Event[];\r\n}\r\n\r\n// Helper function to format Graph date/time\r\nfunction formatDateTime(dateTime: string | undefined) {\r\n  if (dateTime !== undefined) {\r\n    return moment.utc(dateTime).local().format('M/D/YY h:mm A');\r\n  }\r\n}\r\n\r\nclass Calendar extends React.Component<AuthComponentProps, CalendarState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      events: []\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      // Get the user's access token\r\n      var accessToken = await this.props.getAccessToken(config.scopes);\r\n      // Get the user's events\r\n      var events = await getEvents(accessToken);\r\n      // Update the array of events in state\r\n      this.setState({events: events.value});\r\n    }\r\n    catch(err) {\r\n      this.props.setError('ERROR', JSON.stringify(err));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Calendar</h1>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Organizer</th>\r\n              <th scope=\"col\">Subject</th>\r\n              <th scope=\"col\">Start</th>\r\n              <th scope=\"col\">End</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.events.map(\r\n              function(event: Event){\r\n                return(\r\n                  <tr key={event.id}>\r\n                    <td>{event.organizer?.emailAddress?.name}</td>\r\n                    <td>{event.subject}</td>\r\n                    <td>{formatDateTime(event.start?.dateTime)}</td>\r\n                    <td>{formatDateTime(event.end?.dateTime)}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuthProvider(Calendar);","import withAuthProvider, { AuthComponentProps } from './AuthProvider';\r\nimport React, { Component } from 'react';\r\nimport { config } from './Config';\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\n\r\n\r\ninterface SToBClassCodeGeneratorState {\r\n  generatedClassCode: string;\r\n  codeGeneratorFactor: string;\r\n  loading: boolean;\r\n}\r\n\r\n\r\n\r\nclass SToBClassCodeGenerator extends Component<AuthComponentProps, SToBClassCodeGeneratorState> {\r\n  \r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      generatedClassCode: \"\",\r\n      codeGeneratorFactor: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  async fetchGeneratedClassCode(): Promise<void> {\r\n    this.setState({loading: true});\r\n    const accessToken = await this.props.getAccessToken(config.scopes);\r\n    const response = await fetch(`${config.serverUrl}/api/generatedClassCode`, {\r\n        credentials: \"include\",\r\n        headers: {\r\n            \"Authorization\": `Bearer ${accessToken}`,\r\n        }\r\n    })\r\n    const generatedClassCodeResponse = await response.json();\r\n    this.setState({generatedClassCode: generatedClassCodeResponse.generatedClassCode, loading: false});                                   \r\n  }\r\n\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    return (\r\n      <div>\r\n        {loading ? <GridLoader></GridLoader> :  \r\n          <div>\r\n            <h1>Class Change Password Generator</h1>\r\n              <label>Machine Serial #</label>\r\n              <input type=\"text\" value={this.state.codeGeneratorFactor} onInput={e => this.setState({codeGeneratorFactor: e.currentTarget.value})}></input>\r\n              <button onClick={() => this.fetchGeneratedClassCode()} type=\"button\">Generate!</button>\r\n              <br />\r\n              <br />\r\n              <label>Password- </label>\r\n              <label>{this.state.generatedClassCode}</label>\r\n          </div> \r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuthProvider(SToBClassCodeGenerator);","import React, { Component } from 'react';\r\nimport {\r\n  Card, CardText, CardBody,\r\n  CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport Parameter from './model/Parameter';\r\n\r\n\r\ninterface ParameterViewState extends Parameter {}\r\ninterface ParameterViewProps extends Parameter {\r\n  index: number;\r\n}\r\n\r\n\r\n\r\nclass ParameterView extends Component<ParameterViewProps, ParameterViewState> {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle>{this.props.type}</CardTitle>\r\n            <CardSubtitle>Card subtitle</CardSubtitle>\r\n            <CardText>Some quick example text.</CardText>\r\n          </CardBody>\r\n        </Card>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ParameterView;","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\nconst AddStageModal = (props: {addStage: (stateMachineStage: string) => void}) => {\r\n    const [modal, setModal] = useState(false);\r\n  \r\n    const toggle = () => setModal(!modal);\r\n  \r\n    const doOperation = () => {\r\n      toggle();\r\n      props.addStage(\"Remove Air\");\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <Button color=\"primary\" onClick={toggle}>Add Stage</Button>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>Add Stage</ModalHeader>\r\n          <ModalBody>\r\n            stateMachineStage: RemoveAir.\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={doOperation}>Add</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default AddStageModal;","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\nconst AddParameterModal = (props: {addParameter: (type: string) => void}) => {\r\n    const [modal, setModal] = useState(false);\r\n  \r\n    const toggle = () => setModal(!modal);\r\n  \r\n    const doOperation = () => {\r\n      toggle();\r\n      props.addParameter(\"keep_gen\");\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <Button color=\"primary\" onClick={toggle}>Add Parameter</Button>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>Add Parameter</ModalHeader>\r\n          <ModalBody>\r\n            type: keep_gen.\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={doOperation}>Add</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default AddParameterModal;","import React, { Component } from 'react';\r\nimport {\r\n  Card, CardText, CardBody,\r\n  CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport Stage from './model/Stage';\r\nimport ParameterView from './ParameterView';\r\nimport Parameter from './model/Parameter';\r\nimport AddStageModal from './AddStageModal';\r\nimport AddParameterModal from './AddParameterModal';\r\n\r\n\r\ninterface StageViewState extends Stage {}\r\ninterface StageViewProps extends Stage {\r\n  index: number;\r\n  updateStage: (index: number, stage: Stage) => void;\r\n}\r\n\r\n\r\nclass StageView extends Component<StageViewProps, StageViewState> {\r\n  addStage = (stateMachineStage: string) => {\r\n    const newStage: Stage = {\r\n      parameters: [],\r\n      stages: [],\r\n      stateMachineStage,\r\n    };\r\n    const stage = {...this.props};\r\n    stage.stages = [...stage.stages, newStage];\r\n    this.props.updateStage(this.props.index, stage);\r\n  }\r\n\r\n  updateStage = (index: number, updatedStage: Stage) => {\r\n    const stage = {...this.props};\r\n    stage.stages[index] = updatedStage;\r\n    this.props.updateStage(this.props.index, stage);\r\n  }\r\n\r\n  addParameter = (type: string) => {\r\n    const parameter: Parameter = {\r\n      type,\r\n      value: 0,\r\n      defaultValue: 0,\r\n      maxValue: 0,\r\n      minValue: 0,\r\n    };\r\n    const stage = {...this.props};\r\n    stage.parameters = [...stage.parameters, parameter];\r\n    this.props.updateStage(this.props.index, stage);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle>{this.props.stateMachineStage}</CardTitle>\r\n            <CardSubtitle>Card subtitle</CardSubtitle>\r\n            <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n            <AddStageModal addStage={this.addStage}></AddStageModal>\r\n            <AddParameterModal addParameter={this.addParameter}></AddParameterModal>\r\n            {this.props.stages.map((stage: Stage, index: number) => {\r\n                return(\r\n                  <StageView \r\n                    key={index} \r\n                    {...stage} index={index} \r\n                    updateStage={this.updateStage}/>\r\n                );\r\n              })}\r\n              {this.props.parameters.map((parameter: Parameter, index: number) => {\r\n                return(\r\n                  <ParameterView \r\n                    key={index}\r\n                    index={index} \r\n                    {...parameter}/>\r\n                );\r\n              })}\r\n          </CardBody>\r\n        </Card>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StageView;","import React, { Component } from 'react';\r\nimport {\r\n  Card, CardText, CardBody,\r\n  CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport StageView from './StageView';\r\nimport Cycle from './model/Cycle';\r\nimport Stage from './model/Stage';\r\nimport AddStageModal from './AddStageModal';\r\n\r\n\r\ninterface CycleViewState extends Cycle {}\r\ninterface CycleViewProps extends Cycle {\r\n  index: number\r\n  updateCycle: (index: number, cycle: Cycle) => void\r\n}\r\n\r\n\r\n\r\nclass CycleView extends Component<CycleViewProps, CycleViewState> {\r\n\r\n  addStage = (stateMachineStage: string) => {\r\n    const stage: Stage = {\r\n      parameters: [],\r\n      stages: [],\r\n      stateMachineStage,\r\n    };\r\n    const cycle = {...this.props};\r\n    cycle.stages = [...cycle.stages, stage];\r\n    this.props.updateCycle(this.props.index, cycle);\r\n  }\r\n\r\n  updateStage = (index: number, stage: Stage) => {\r\n    const cycle = {...this.props};\r\n    cycle.stages[index] = stage;\r\n    this.props.updateCycle(this.props.index, cycle);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle>{this.props.cycleId}</CardTitle>\r\n            <CardSubtitle>Card subtitle</CardSubtitle>\r\n            <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n            <AddStageModal addStage={this.addStage}></AddStageModal>\r\n            {this.props.stages.map((stage: Stage, index: number) => (\r\n                  <StageView key={stage.stateMachineStage} \r\n                    {...stage} \r\n                    index={index}\r\n                    updateStage={this.updateStage}/>\r\n                )\r\n              )}\r\n          </CardBody>\r\n        </Card>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CycleView;","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\nconst AddCycleModal = (props: {addCycle: (cycleId: string) => void}) => {\r\n    const [modal, setModal] = useState(false);\r\n  \r\n    const toggle = () => setModal(!modal);\r\n  \r\n    const doOperation = () => {\r\n      toggle();\r\n      props.addCycle(\"Unwrapped121\");\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <Button color=\"primary\" onClick={toggle}>Add Cycle</Button>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>Add Cycle</ModalHeader>\r\n          <ModalBody>\r\n            Cycle id: Unwrapped121.\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={doOperation}>Add</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default AddCycleModal;","import withAuthProvider, { AuthComponentProps } from './AuthProvider';\r\nimport React, { Component } from 'react';\r\nimport CycleView from './settings/CycleView';\r\nimport Cycle from './settings/model/Cycle';\r\nimport AddCycleModal from './settings/AddCycleModal';\r\n\r\n\r\ninterface SettingsState {\r\n  cycles: Array<Cycle>;\r\n}\r\n\r\nclass Settings extends Component<AuthComponentProps, SettingsState> {\r\n  \r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      cycles: [],\r\n    }\r\n  }\r\n\r\n\r\n  addCycle = (cycleId: string) => {\r\n    this.setState(state => {\r\n      const cycle: Cycle = {\r\n        cycleId,\r\n        stages: [],\r\n      };\r\n      return {cycles: [...state.cycles, cycle]};\r\n    });\r\n  }\r\n\r\n  updateCycle = (index: number, cycle: Cycle) => {\r\n    this.setState(state => {\r\n      const cycles = [...state.cycles];\r\n      cycles[index] = cycle;\r\n      return {cycles};\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AddCycleModal addCycle={this.addCycle}></AddCycleModal>\r\n        {this.state.cycles.map(\r\n              (cycle: Cycle, index: number) => {\r\n                return(\r\n                  <CycleView key={index} {...cycle} index={index} updateCycle={this.updateCycle}/>\r\n                );\r\n              })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuthProvider(Settings);","import withAuthProvider, { AuthComponentProps } from './AuthProvider';\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport NavBar from './NavBar';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport Welcome from './Welcome';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Calendar from './Calendar';\r\nimport SToBClassCodeGenerator from './SToBClassCodeGenerator';\r\nimport Settings from './Settings';\r\n\r\nclass App extends Component<AuthComponentProps> {\r\n  render() {\r\n    let error = null;\r\n    if (this.props.error) {\r\n      error = <ErrorMessage\r\n        message={this.props.error.message}\r\n        debug={this.props.error.debug} />;\r\n    }\r\n\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <NavBar\r\n            isAuthenticated={this.props.isAuthenticated}\r\n            authButtonMethod={this.props.isAuthenticated ? this.props.logout : this.props.login}\r\n            user={this.props.user}/>\r\n          <Container>\r\n            {error}\r\n            <Route exact path=\"/\"\r\n              render={(props) =>\r\n                <Welcome {...props}\r\n                  isAuthenticated={this.props.isAuthenticated}\r\n                  user={this.props.user}\r\n                  authButtonMethod={this.props.login} />\r\n              } />\r\n              <Route exact path=\"/calendar\"\r\n                render={(props) =>\r\n                  this.props.isAuthenticated ?\r\n                    <Calendar {...props} /> :\r\n                    <Redirect to=\"/\" />\r\n                } />\r\n              <Route exact path=\"/s-b-code\"\r\n                render={(props) =>\r\n                  this.props.isAuthenticated ?\r\n                    <SToBClassCodeGenerator {...props} /> :\r\n                    <Redirect to=\"/\" />\r\n                } />\r\n              <Route exact path=\"/settings\"\r\n                render={(props) =>\r\n                  <Settings {...props} />\r\n                } />\r\n          </Container>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuthProvider(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}